aqua Main

import "@fluencelabs/aqua-lib/builtin.aqua"
import "@fluencelabs/aqua-lib/subnet.aqua"

use "deals.aqua"
use "hosts.aqua"
import "services.aqua"

-- IMPORTANT: Add exports for all functions that you want to run
export test

func getTestWorkers() -> []Worker:

    deals <- Deals.get()
    dealId = deals.testV0!.dealIdOriginal
    on HOST_PEER_ID:
        subnet <- Subnet.resolve(dealId)
    if subnet.success == false:
        Console.print(["Failed to resolve subnet: ", subnet.error])
    <- subnet.workers


service FS("op"):
  concat_strings(a: string, b: string, c: string) -> string

func verifyResults(results: []string) -> bool:

    b: *bool
    if results[0] == results[1] && results[0] == results[2] :
        b <<- true
    else:
        b <<- false
    <- b!


func test() -> bool:

    b: *bool
    cids: *string
    res: *[]string
    dir_name = "testdir"
    content = "hello trisolaris"
    file_name = "test.txt"
    path = FS.concat_strings(dir_name,"/", file_name)
    arr: *string
    
    for w <- getTestWorkers() par:
        on w.worker_id! via w.host_id:
            r1 <- CioVault.dir(dir_name)
            r2 <- CioVault.write(content,path)
            res <- CioVault.inspect(dir_name)

    join res[2]

    for rr <- res:
        for r <- rr:
            arr <<- r

    <- verifyResults(arr)

